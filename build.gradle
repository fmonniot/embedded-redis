plugins {
    id "com.jfrog.bintray" version "1.7"
    id "net.saliman.cobertura" version "2.4.0"
    id "com.github.kt3k.coveralls" version "2.8.1"
}

def libGroup = 'eu.monniot.redis'
def libVersion = '1.6.0'
def libArtifact = 'embedded-redis'

rootProject.ext.libGroup = libGroup
rootProject.ext.libVersion = libVersion
rootProject.ext.libArtifact = libArtifact

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

    test {
        dependsOn cleanTest
        testLogging.showStandardStreams = true
    }

    group = libGroup
    version = libVersion

    description = """Redis embedded server for Java integration testing"""

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    dependencies {
        compile group: 'com.google.guava', name: 'guava', version: '19.0'
        compile group: 'commons-io', name: 'commons-io', version: '2.4'
        compile group: 'redis.clients', name: 'jedis', version: '2.8.0'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.18'

        testCompile(group: 'org.mockito', name: 'mockito-core', version: '1.10.19') {
            exclude(module: 'hamcrest-core')
        }
        testCompile(group: 'junit', name: 'junit', version: '4.12') {
            exclude(module: 'hamcrest-core')
        }

        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
        testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.18'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.4'
        testCompile group: 'org.powermock', name: 'powermock-core', version: '1.6.4'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.4'
    }

    // custom tasks for creating source/javadoc jars
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

// add javadoc/source jar tasks as artifacts
    artifacts {
        archives sourcesJar, javadocJar
    }

    // Publish on bintray configuration
    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

        publish = true
        //dryRun = true

        pkg {
            repo = 'maven'
            name = libArtifact // Will be overridden by project definition

            websiteUrl = 'https://github.com/fmonniot/embedded-redis'
            issueTrackerUrl = 'https://github.com/fmonniot/embedded-redis/issues'
            vcsUrl = 'https://github.com/fmonniot/embedded-redis.git'
            licenses = ['Apache-2.0']

            publicDownloadNumbers = false

            version {
                name = libVersion
            }
        }
    }
}

project(':') {
    //apply plugin: 'maven-publish'

    publishing {
        publications {
            lib(MavenPublication) {
                from components.java

                artifact sourcesJar
                artifact javadocJar

                artifactId libArtifact
            }
        }
    }

    bintray {
        publications = ['lib']

        pkg {
            name = libArtifact
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}